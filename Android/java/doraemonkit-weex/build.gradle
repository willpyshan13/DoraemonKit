apply plugin: 'com.android.library'
if (rootProject.ext.config["publishArchivesType"] == 2) {
    apply from: 'upload-release.gradle'
} else if (rootProject.ext.config["publishArchivesType"] == 0 || rootProject.ext.config["publishArchivesType"] == 1) {
    apply from: 'upload-dev.gradle'
}

android {
    compileSdkVersion rootProject.ext.android["compileSdkVersion"]

    defaultConfig {
        minSdkVersion rootProject.ext.android["minSdkVersion"]
        targetSdkVersion rootProject.ext.android["targetSdkVersion"]
        versionCode rootProject.ext.android["versionCode"]
        versionName rootProject.ext.android["versionName"]

        lintOptions {
            abortOnError false
        }
    }

    buildTypes {
        debug {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    lintOptions {
        abortOnError false
    }

}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])

    implementation rootProject.ext.dependencies["appcompat"]
    implementation rootProject.ext.dependencies["constraintLayout"]
    implementation rootProject.ext.dependencies["design"]
    implementation rootProject.ext.dependencies["utilcode"]
    if (rootProject.ext.config["runOrPublish"] == 0) {
        api project(':doraemonkit')
    } else {
        api "com.didichuxing.doraemonkit:dokitx:${rootProject.ext.android["jcenterArchivesVersionName"]}"
    }

    compileOnly rootProject.ext.dependencies["weex_inspector"]
    compileOnly rootProject.ext.dependencies["weex_sdk"]
}
